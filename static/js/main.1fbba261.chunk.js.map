{"version":3,"sources":["component/CurrentDate/CurrentDate.js","common/createDate.js","redux/store.js","component/Tools/EntryField.js","component/Tools/Filter.js","component/Tools/Tools.js","component/TasksBlock/Delete/Delete.js","component/TasksBlock/Edit/Edit.js","component/TasksBlock/Task/Task.js","component/TasksBlock/Tasks/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["date","Date","month","toLocaleString","days","CurrentDate","className","getDate","getFullYear","getDay","createDate","year","getMonth","day","ADD_NEW_TASK","FILTER_OUT","MARK_TASK","DELETE_TASK","UPDATE_TASK_TEXT_VALUE","UPDATE_TASK_DATE","initialState","isFiltered","tasks","localStorage","JSON","parse","store","createStore","state","action","type","id","task","value","trim","completed","dateTask","map","item","filter","text","connect","addNewTask","useState","setText","useEffect","setItem","stringify","onSubmit","e","preventDefault","target","children","shortid","generate","alert","onChange","filterOut","for","Tools","deleteTask","onClick","Edit","edit","Task","updateTaskDate","updateTaskTextValue","markTask","num","editMode","setEditMode","setDate","deActiveEditMode","checked","onKeyDown","key","autoFocus","onInput","readOnly","props","length","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fbba261.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./current.css\";\n\nconst date = new Date();\nconst month = date.toLocaleString(\"en\", { month: \"long\" });\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n\nconst CurrentDate = () => (\n  <div className=\"date-block\">\n    <div className=\"date\">\n      <p className=\"date-day\">{date.getDate()}</p>\n      <div>\n        <p className=\"date-month\">{month}</p>\n        <p className=\"date-year\">{date.getFullYear()}</p>\n      </div>\n    </div>\n    <div className=\"date-weekDay\">{days[date.getDay()]}</div>\n  </div>\n);\n\nexport default CurrentDate;\n","export const createDate = () => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  let month = date.getMonth() < 10 ? `0${date.getMonth()}` : date.getMonth();\r\n  const day = date.getDate();\r\n  return `${year}-${month < 12 ? +month + 1 : `0${(month = 1)}`}-${day}`;\r\n};\r\n","import { createStore } from \"redux\";\r\n\r\nconst ADD_NEW_TASK = \"ADD_NEW_TASK\";\r\nconst FILTER_OUT = \"FILTER_OUT\";\r\nconst MARK_TASK = \"MARK_TASK\";\r\nconst EDIT_TASK = \"EDIT_TASK\";\r\nconst DELETE_TASK = \"DELETE_TASK\";\r\nconst UPDATE_TASK_TEXT_VALUE = \"UPDATE_TASK_TEXT_VALUE\";\r\nconst UPDATE_TASK_DATE = \"UPDATE_TASK_DATE\";\r\n\r\nconst initialState = {\r\n  isFiltered: false,\r\n  tasks: localStorage[\"tasks\"] ? JSON.parse(localStorage[\"tasks\"]) : [],\r\n};\r\n\r\nconst reducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_NEW_TASK: {\r\n      return {\r\n        ...state,\r\n        tasks: [\r\n          ...state.tasks,\r\n          {\r\n            id: action.task.id,\r\n            value: action.task.value.trim(),\r\n            completed: action.task.completed,\r\n            dateTask: action.task.dateTask,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n    case FILTER_OUT: {\r\n      return {\r\n        ...state,\r\n        isFiltered: action.isFiltered,\r\n      };\r\n    }\r\n    case MARK_TASK: {\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((item) => {\r\n          if (item.id === action.id) {\r\n            return {\r\n              ...item,\r\n              completed: !item.completed,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n    }\r\n    case DELETE_TASK: {\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter((item) => item.id !== action.id),\r\n      };\r\n    }\r\n    case UPDATE_TASK_TEXT_VALUE: {\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((item) => {\r\n          if (item.id === action.id) {\r\n            return {\r\n              ...item,\r\n              value: action.text,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n    }\r\n    case UPDATE_TASK_DATE: {\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map((item) => {\r\n          if (item.id === action.id) {\r\n            return {\r\n              ...item,\r\n              dateTask: action.value,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nconst store = createStore(reducers);\r\n\r\n// Action Creator\r\nexport const addNewTask = (task) => ({\r\n  type: ADD_NEW_TASK,\r\n  task,\r\n});\r\nexport const filterOut = (isFiltered) => ({\r\n  type: FILTER_OUT,\r\n  isFiltered,\r\n});\r\nexport const markTask = (id) => ({\r\n  type: MARK_TASK,\r\n  id,\r\n});\r\nexport const editTask = (id) => ({\r\n  type: EDIT_TASK,\r\n  id,\r\n});\r\nexport const deleteTask = (id) => ({\r\n  type: DELETE_TASK,\r\n  id,\r\n});\r\nexport const updateTaskTextValue = (text, id) => ({\r\n  type: UPDATE_TASK_TEXT_VALUE,\r\n  text,\r\n  id,\r\n});\r\nexport const updateTaskDate = (value, id) => ({\r\n  type: UPDATE_TASK_DATE,\r\n  value,\r\n  id,\r\n});\r\n\r\nexport default store;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport { createDate } from \"../../common/createDate\";\r\nimport { addNewTask } from \"../../redux/store\";\r\n\r\nconst EntryField = ({ tasks, addNewTask }) => {\r\n  const [text, setText] = useState(\"\");\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n  const newText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const addTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.children[0].value.trim() !== \"\") {\r\n      const task = {\r\n        id: shortid.generate(),\r\n        value: text,\r\n        completed: false,\r\n        dateTask: createDate(),\r\n      };\r\n      addNewTask(task);\r\n    } else {\r\n      alert(\"Empty field!\");\r\n    }\r\n\r\n    setText(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={addTask}>\r\n      <input\r\n        onChange={newText}\r\n        id=\"input\"\r\n        type=\"text\"\r\n        className=\"input\"\r\n        value={text}\r\n      />\r\n      <button className=\"button-new-task\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ tasks }) => ({\r\n  tasks,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addNewTask })(EntryField);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { filterOut } from \"../../redux/store\";\n\nconst Filter = ({ isFiltered, filterOut }) => {\n  const filterCompleted = () => {\n    filterOut(!isFiltered);\n  };\n  return (\n    <div>\n      <input\n        onChange={filterCompleted}\n        className=\"task-checkbox completed-tasks\"\n        id=\"filterCheckbox\"\n        type=\"checkbox\"\n      />\n      <label for=\"filterCheckbox\">\n        <span></span>\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ isFiltered }) => ({\n  isFiltered,\n});\n\nexport default connect(mapStateToProps, { filterOut })(Filter);\n","import React from \"react\";\nimport EntryField from \"./EntryField\";\nimport Filter from \"./Filter\";\nimport \"./tools.css\";\n\nconst Tools = () => (\n  <div className=\"filter\">\n    <EntryField />\n    <Filter />\n  </div>\n);\nexport default Tools;\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTask } from \"../../../redux/store\";\r\n\r\nconst Delete = ({ id, deleteTask }) => {\r\n  const deleteItem = (e) => {\r\n    deleteTask(e.target.id);\r\n  };\r\n  return <button id={id} onClick={deleteItem} className=\"task-delete\"></button>;\r\n};\r\nconst mapStateToProps = ({ tasks }) => ({\r\n  tasks,\r\n});\r\nexport default connect(mapStateToProps, { deleteTask })(Delete);\r\n","import React from \"react\";\r\nimport \"../itemOperations.css\";\r\nconst Edit = ({ id, edit }) => (\r\n  <button id={id} onClick={edit} className=\"task-edit\"></button>\r\n);\r\nexport default Edit;\r\n","import React, { useState } from \"react\";\r\nimport Delete from \"../Delete/Delete\";\r\nimport Edit from \"../Edit/Edit\";\r\nimport \"./task.css\";\r\n\r\nconst Task = ({\r\n  updateTaskDate,\r\n  updateTaskTextValue,\r\n  task,\r\n  isFiltered,\r\n  markTask,\r\n  num,\r\n}) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [text, setText] = useState(task.value);\r\n  const [date, setDate] = useState(task.dateTask);\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const changeCheckbox = () => {\r\n    markTask(task.id);\r\n  };\r\n  const deActiveEditMode = () => {\r\n    if (text.trim() === \"\") alert(\"Empty field\");\r\n    else {\r\n      setEditMode(false);\r\n      updateTaskTextValue(text, task.id);\r\n      updateTaskDate(date, task.id);\r\n    }\r\n  };\r\n  const updateTaskText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const updateDate = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n  if (isFiltered && !task.completed) return null;\r\n  return (\r\n    <li className=\"task-item\">\r\n      <span className=\"task-number\">{num + 1}</span>\r\n      <div className=\"task-status\">\r\n        <input\r\n          className=\"task-checkbox\"\r\n          type=\"checkbox\"\r\n          onChange={changeCheckbox}\r\n          checked={task.completed}\r\n          id={task.id}\r\n        />\r\n        <label for={task.id}>\r\n          <span></span>\r\n        </label>\r\n      </div>\r\n      {!editMode ? (\r\n        <span>{text}</span>\r\n      ) : (\r\n        <input\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              deActiveEditMode(e);\r\n            }\r\n          }}\r\n          onChange={updateTaskText}\r\n          autoFocus\r\n          value={text}\r\n        />\r\n      )}\r\n      <input\r\n        onInput={updateDate}\r\n        readOnly={!editMode}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            deActiveEditMode(e);\r\n          }\r\n        }}\r\n        className=\"task-date\"\r\n        type=\"date\"\r\n        value={date}\r\n      />\r\n      <div className=\"task-interaction\">\r\n        {editMode ? (\r\n          <Edit edit={deActiveEditMode} id={task.id} />\r\n        ) : (\r\n          <Edit edit={activateEditMode} id={task.id} />\r\n        )}\r\n        <Delete id={task.id} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  markTask,\r\n  updateTaskDate,\r\n  updateTaskTextValue,\r\n} from \"../../../redux/store\";\r\nimport Task from \"../Task/Task\";\r\nimport \"./tasks.css\";\r\n\r\nconst Tasks = (props) => {\r\n  return (\r\n    <div className=\"tasks-block\">\r\n      {props.tasks.length > 9 ? <div className=\"navigation\">↓</div> : null}\r\n      <ul className=\"tasks-list\">\r\n        {props.tasks.map((item, index) => (\r\n          <Task key={item.id} num={index} task={item} {...props} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ tasks, isFiltered }) => ({\r\n  isFiltered,\r\n  tasks,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  updateTaskDate,\r\n  markTask,\r\n  updateTaskTextValue,\r\n})(Tasks);\r\n","import React from \"react\";\nimport CurrentDate from \"./component/CurrentDate/CurrentDate\";\nimport Tools from \"./component/Tools/Tools\";\nimport Tasks from \"./component/TasksBlock/Tasks/Tasks\";\n\nimport \"./App.css\";\n\nconst App = () => (\n  <div className=\"todoList\">\n    <CurrentDate />\n    <Tools />\n    <Tasks />\n  </div>\n);\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}